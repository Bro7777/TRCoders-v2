"""
Django settings for try_project project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+&z^)k_92tl&&th)5$idf)fk-u=$b=i24$b-^2r!3w&27u)di9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AWS_ACCESS_KEY_ID='AKIAUJ3VUOQD2PEIKRXK'
AWS_SECRET_ACCESS_KEY='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'


AWS_STORAGE_BUCKET_NAME='trcoders-v-2'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_S3_FILE_OVERWRITE=False

STORAGES ={

# Media file (image) management

  "default": {

    "BACKEND": "storages.backends.s3boto3.S3StaticStorage",

  },



# CSS and JS file management

  "staticfiles": {

    "BACKEND": "storages.backends.s3boto3.S3StaticStorage",

  },

}
# Application definition

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'TRCodersTrying','django_cleanup','ckeditor','users','problems','groups','ranking',
    'storages'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'try_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'try_project.wsgi.application'
#ASGI_APPLICATION = 'try_project.asgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

'''DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}'''
import dj_database_url
import environ

env=environ.Env()
environ.Env.read_env()

DATABASES = {
    'default': dj_database_url.parse(env("DATABASE_URL"))
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'tr'

TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_TZ = True


#ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '25.21.178.49']
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '25.21.178.49','514ca86c-5eed-4e1d-91b7-2a27a828c018-00-2pnqv1itcb65f.pike.replit.dev']#,'.vercel.app']
CSRF_TRUSTED_ORIGINS =['https://514ca86c-5eed-4e1d-91b7-2a27a828c018-00-2pnqv1itcb65f.pike.replit.dev']#,'.vercel.app']
CORS_ALLOWED_ORIGINS = ['https://514ca86c-5eed-4e1d-91b7-2a27a828c018-00-2pnqv1itcb65f.pike.replit.dev']#,'.vercel.app']
CORS_ALLOW_ALL_ORIGINS = True





# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL='media/'

STATICFILES_DIRS = [
    BASE_DIR / "static",  # static klasörünü ekliyoruz
]

X_FRAME_OPTIONS = 'SAMEORIGIN'

STATIC_ROOT = BASE_DIR / "staticfiles"  # collectstatic ile toplama yapacağın yer
MEDIA_ROOT= BASE_DIR/"media"




# settings.py




# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
